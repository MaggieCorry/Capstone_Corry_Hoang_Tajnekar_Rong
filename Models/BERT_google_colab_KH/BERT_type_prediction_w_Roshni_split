{"cells":[{"cell_type":"markdown","metadata":{"id":"uNBJhwLF60pm"},"source":["# **Installs**"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"_3gcfvgxEkyZ","executionInfo":{"status":"ok","timestamp":1721025376387,"user_tz":420,"elapsed":80717,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"bbe026b0-6b7b-4be2-a436-bd1c761b8053"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m5.2/5.2 MB\u001b[0m \u001b[31m14.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m3.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m5.2/5.2 MB\u001b[0m \u001b[31m16.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.8/3.8 MB\u001b[0m \u001b[31m15.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m897.5/897.5 kB\u001b[0m \u001b[31m24.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["!pip install tensorflow-datasets==4.8 --quiet\n","!pip install tensorflow==2.15.0 --quiet #15 13\n","!pip install tf_keras==2.15.0 --quiet\n","!pip install tensorflow-text==2.15.0 --quiet #15\n","!pip install transformers==4.17 --quiet\n","!pip install pydot --quiet"]},{"cell_type":"markdown","metadata":{"id":"lL1Cdmjf-Jav"},"source":["## **Imports**"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"v1lcwvdT-ZOb","executionInfo":{"status":"ok","timestamp":1721025386337,"user_tz":420,"elapsed":9958,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"outputs":[],"source":["import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","\n","from tensorflow.keras.layers import Embedding, Input, Dense, Lambda\n","from tensorflow.keras.models import Model\n","import tensorflow.keras.backend as K\n","import tensorflow_datasets as tfds\n","\n","\n","\n","import sklearn as sk\n","from sklearn.metrics import classification_report\n","import os\n","import nltk\n","from nltk.data import find\n","\n","import matplotlib.pyplot as plt\n","\n","import re"]},{"cell_type":"code","source":["from transformers import BertTokenizer, TFBertModel\n","\n","from transformers import logging\n","logging.set_verbosity_error()"],"metadata":{"id":"hd1fqL06-NV2","executionInfo":{"status":"ok","timestamp":1721025386761,"user_tz":420,"elapsed":446,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["tf.config.run_functions_eagerly(True)"],"metadata":{"id":"tK-6xaAr7ldq","executionInfo":{"status":"ok","timestamp":1721025386969,"user_tz":420,"elapsed":210,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"b_mlbOdwDUNZ","executionInfo":{"status":"ok","timestamp":1721025386969,"user_tz":420,"elapsed":8,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TfYa57Si8bFU"},"source":["# **Data Load**"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7r603eDN8jOP","executionInfo":{"status":"ok","timestamp":1721025419594,"user_tz":420,"elapsed":32632,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"3e44b2fc-b002-49f0-f484-0972b6311518"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["DATA_PATH = '/content/drive/MyDrive/capstone_modeling/data'"],"metadata":{"id":"0-_G9ApZAv5d","executionInfo":{"status":"ok","timestamp":1721025419595,"user_tz":420,"elapsed":7,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["train_df = pd.read_csv(f\"{DATA_PATH}/train_dataset.csv\")\n","\n","unique_counts = train_df.apply(lambda x: x.nunique())\n","print(\"\\nUnique Value Counts:\")\n","print(unique_counts)\n","\n","duplicate_projects = train_df[train_df.duplicated('project_name', keep=False)]\n","duplicate_projects\n","\n","type_df = train_df[\"type\"]\n","type_counts = type_df.value_counts().reset_index()\n","type_counts.columns = [\"type\", 'count']\n","\n","type_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"dUhSO_3O6SqB","executionInfo":{"status":"ok","timestamp":1721025420683,"user_tz":420,"elapsed":1093,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"39ef1f9f-6982-4ae2-b826-8fa25405cf97"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Unique Value Counts:\n","project_id                                       7269\n","project_name                                     7210\n","voluntary_registry                                  4\n","arborwaproject                                      4\n","voluntary_status                                   27\n","scope                                               9\n","type                                               78\n","reduction_or_removal                                4\n","methodology_or_protocol                           359\n","region                                             13\n","country                                           135\n","state                                             100\n","project_site_location                             892\n","project_developer                                2572\n","total_credits_issued                             3724\n","total_credits_retired                            3043\n","total_credits_remaining                          2969\n","total_buffer_pool_deposits                        548\n","reversals_covered_by_buffer_pool                    6\n","reversals_not_covered_by_buffer                    11\n","first_year_of_project_(vintage)                    26\n","year_unknown                                      145\n","project_owner                                     401\n","offset_project_operator                           176\n","authorized_project_designee                        33\n","verifier                                           37\n","estimated_annual_emission_reductions             4414\n","pers                                               17\n","registry_or_arb_or_wa                               6\n","arb_project_detail                                 19\n","arb_id                                            517\n","poa_idoraggregate_id                              260\n","corsia_eligible                                     4\n","project_listed                                    455\n","project_registered                               1179\n","ccb_or_certifications                              15\n","project_type_from_the_registry                    106\n","registry_documents                               7269\n","project_website                                   145\n","notes_from_registry                                51\n","notes_from_berkeley_carbon_trading_project         50\n","added_to_database_version_-_with_data_through      11\n","unnamed:_158                                        0\n","1st_issuance_yr_(no_hard_code,_hide)               27\n","unnamed:_160                                        1\n","dtype: int64\n"]},{"output_type":"execute_result","data":{"text/plain":["                              type  count\n","0                       Cookstoves   1166\n","1                             Wind    831\n","2       Improved Forest Management    597\n","3                       Hydropower    419\n","4      Afforestation/Reforestation    374\n","..                             ...    ...\n","73   Compost Addition to Rangeland      1\n","74  Improved irrigation management      1\n","75              Pneumatic Retrofit      1\n","76     Grid Expansion & Mini-Grids      1\n","77       Carbon Capture in Plastic      1\n","\n","[78 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-d957ff65-6fc5-4240-a0ff-6150f97a396d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>type</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Cookstoves</td>\n","      <td>1166</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Wind</td>\n","      <td>831</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Improved Forest Management</td>\n","      <td>597</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Hydropower</td>\n","      <td>419</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Afforestation/Reforestation</td>\n","      <td>374</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>Compost Addition to Rangeland</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>Improved irrigation management</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>Pneumatic Retrofit</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>Grid Expansion &amp; Mini-Grids</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>Carbon Capture in Plastic</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>78 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d957ff65-6fc5-4240-a0ff-6150f97a396d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d957ff65-6fc5-4240-a0ff-6150f97a396d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d957ff65-6fc5-4240-a0ff-6150f97a396d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c2d85b29-4feb-4949-b88c-f236bc3fb2a8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2d85b29-4feb-4949-b88c-f236bc3fb2a8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c2d85b29-4feb-4949-b88c-f236bc3fb2a8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_549f9118-c133-47f2-a77e-99b255ea7275\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('type_counts')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_549f9118-c133-47f2-a77e-99b255ea7275 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('type_counts');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"type_counts","summary":"{\n  \"name\": \"type_counts\",\n  \"rows\": 78,\n  \"fields\": [\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 78,\n        \"samples\": [\n          \"Avoided Grassland Conversion\",\n          \"Cookstoves\",\n          \"Natural Gas Electricity Generation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 190,\n        \"min\": 1,\n        \"max\": 1166,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          30,\n          8,\n          37\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Projects with types lower than 10 counts\n","type_counts = train_df[\"type\"].value_counts()\n","\n","# Identify the types with fewer than 10 counts\n","types_to_drop = type_counts[type_counts < 10].index\n","print(types_to_drop.shape)\n","# Drop the records with these types from train_df\n","train_df_new = train_df[~train_df[\"type\"].isin(types_to_drop)]\n","print(train_df_new.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xu7q3xe-8gVN","executionInfo":{"status":"ok","timestamp":1721025420683,"user_tz":420,"elapsed":10,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"b78d060e-1c05-4455-ff03-b4b39697fd57"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["(32,)\n","(7148, 45)\n"]}]},{"cell_type":"code","source":["X_train_df = train_df_new.drop(columns=['type', 'scope'])\n","Y_train_df = train_df_new['type']"],"metadata":{"id":"9xW2zSz_9CHE","executionInfo":{"status":"ok","timestamp":1721025420683,"user_tz":420,"elapsed":6,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_val, Y_train, Y_val  = train_test_split(X_train_df,Y_train_df, test_size=0.1, stratify =Y_train_df,  random_state=42)\n","print(X_train.shape, X_val.shape, Y_train.shape, Y_val.shape )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kzHGEFLv8-9j","executionInfo":{"status":"ok","timestamp":1721025420683,"user_tz":420,"elapsed":6,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"c57e5495-e562-480a-8102-8d82d6d08959"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["(6433, 43) (715, 43) (6433,) (715,)\n"]}]},{"cell_type":"code","source":["train_proj_ids = list(X_train.project_id)"],"metadata":{"id":"44f_h7B8_470","executionInfo":{"status":"ok","timestamp":1721025420684,"user_tz":420,"elapsed":5,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["val_proj_ids = list(X_val.project_id)"],"metadata":{"id":"4j558sFDDkcS","executionInfo":{"status":"ok","timestamp":1721025420687,"user_tz":420,"elapsed":8,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["data_preprocessed = pd.read_csv(f'{DATA_PATH}/projects_table_rules_final_ml.csv')"],"metadata":{"id":"21DMop7IA0rD","executionInfo":{"status":"ok","timestamp":1721025421313,"user_tz":420,"elapsed":634,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":145,"referenced_widgets":["9d1cd7011cd24e7a8ad9c62a69ca24a0","fb221211ec774b8880752c989a7fc06f","7874cf89f53d49389dcbea6b339eb4d5","b4e9f726700144d2b515f13484c6e25e","1676dba5364249eb9c4316db8d93a605","4600b15fedb647c58676903d62d2a8cd","60411f199f2e4c37b43c3bc9ea0091d9","fdb5643546fa40d19121b3a3b47a34a5","6c14b22033024da5ac15cd6e795941a3","2c739c90a06744a9884d3a7eb6443ebb","91954104edcd4f7cb6de2d9dd1c65f4f","da5959e4f24447738530e3008db19e42","63e7b27783e6430f81112798d727cebf","511e682e025b40ed941bf97bacd99c18","b21b55d169924086b9433bee0262e3aa","b06f5849359546b394f882adc380079e","50a0e589b6164930b7a60aa829beb640","a4a9fc34e2604d71a727929c5e5198ef","661209ea99684af3a4040c8d1fb53bd6","c8f226b10ebc4c7fab253ece843fbd0f","3db1badd608647a7a3f7f76620a30a20","250ce0d3bd8249a2a0dc7ce9fe2440d4","3bc325475bf745d38dc7b6035efcba83","95107aa066b844f0a3dd9e143726a931","456a3cc27bc14362ad4988a8a0964fa4","12f94cd18d6e4c0099d42685a9b575be","a0fc1e44bd9947c1a959f19a17c8e93b","6a021c26da884a91b386b92b7179f516","290663c6cd4046e9a1d844117f7620a9","90aacb62d9cb4f308981f44b1da055aa","a836256c4a054ca086794e40d82a928f","0d02a9e2053a4c9c85bb108a97fcd9ea","6de6793c6a7849d482067cf4c844e4b0","1035e533f4994575985871bf44ace6e0","10f04e238514498284666d834d9e68f5","d37c5d28bfd8469993c0ac3f5a9b86fe","a7da439630b04261946c5a158b1864cc","7c694f88fa034899809f6122015c50fb","abc0c0af2a834bc7bf46e25c721c2414","154150213cc94c68b0e41c1704897de4","6d27f532793e45ec8bbecd9088b35c92","1c6453cf0fab400983493297cc45ed1b","f2c8bd1e7af64d1693393413f3758b4d","426a0f91f62d4a0c9a25bebaaafb1303"]},"id":"JJngH2hWZuih","outputId":"a360b4a5-7fb4-4a16-960d-55162fa90bbc","executionInfo":{"status":"ok","timestamp":1721025437210,"user_tz":420,"elapsed":15902,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/208k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9d1cd7011cd24e7a8ad9c62a69ca24a0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/49.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"da5959e4f24447738530e3008db19e42"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3bc325475bf745d38dc7b6035efcba83"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/502M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1035e533f4994575985871bf44ace6e0"}},"metadata":{}}],"source":["model_name =  'bert-base-cased'\n","\n","bert_tokenizer = BertTokenizer.from_pretrained(model_name)\n","bert_model = TFBertModel.from_pretrained(model_name, output_hidden_states = True)"]},{"cell_type":"code","source":["data_preprocessed.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":568},"id":"n3XP2PyZIUJs","executionInfo":{"status":"ok","timestamp":1721025437210,"user_tz":420,"elapsed":38,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"805647a8-19d5-4ba4-9df2-a86018711dad"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  project_id                       project_name voluntary_registry  \\\n","0     ACR586  18 Reserves Forest Carbon Project                ACR   \n","1     ACR206                            2014-P4                ACR   \n","2     ACR203                            2014-P5                ACR   \n","3     ACR521                       A-Gas 1-2020                ACR   \n","4     ACR522                       A-Gas 2-2020                ACR   \n","\n","  voluntary_status  reduction_removal project_type_from_the_registry region  \\\n","0       Registered                NaN                  Forest Carbon    NaN   \n","1              NaN                NaN     Ozone Depleting Substances    NaN   \n","2              NaN                NaN     Ozone Depleting Substances    NaN   \n","3              NaN                NaN     Ozone Depleting Substances    NaN   \n","4              NaN                NaN     Ozone Depleting Substances    NaN   \n","\n","  country     state project_site_location  ... arb_project_type  \\\n","0      US      OHIO        Near Cleveland  ...              NaN   \n","1      US  ARKANSAS             El Dorado  ...              ODS   \n","2      US  ARKANSAS             El Dorado  ...              NaN   \n","3      US      OHIO         Bowling Green  ...              ODS   \n","4      US      OHIO         Bowling Green  ...              ODS   \n","\n","  version_string                         arb_harmonized_methodology  \\\n","0            NaN                                                NaN   \n","1            NaN  ARB Compliance Offset Protocol: Destruction of...   \n","2            NaN                                                NaN   \n","3            NaN  ARB Compliance Offset Protocol: Destruction of...   \n","4            NaN  ARB Compliance Offset Protocol: Destruction of...   \n","\n","  car_harmonized_methodology  \\\n","0                        NaN   \n","1                        NaN   \n","2                        NaN   \n","3                        NaN   \n","4                        NaN   \n","\n","                                methodology_protocol  \\\n","0  Improved Forest Management (IFM) on Non-Federa...   \n","1  ARB Compliance Offset Protocol: Destruction of...   \n","2  ARB Compliance Offset Protocol: Destruction of...   \n","3  ARB Compliance Offset Protocol: Destruction of...   \n","4  ARB Compliance Offset Protocol: Destruction of...   \n","\n","                     harmonized_methodology_protocol  \\\n","0  ACR Improved Forest Management (IFM) on Non-Fe...   \n","1  ARB Compliance Offset Protocol: Destruction of...   \n","2  ARB Compliance Offset Protocol: Destruction of...   \n","3  ARB Compliance Offset Protocol: Destruction of...   \n","4  ARB Compliance Offset Protocol: Destruction of...   \n","\n","               fully_harmonized_methodology_protocol  \\\n","0  ACR Improved Forest Management (IFM) on Non-Fe...   \n","1  ARB Compliance Offset Protocol: Destruction of...   \n","2  ARB Compliance Offset Protocol: Destruction of...   \n","3  ARB Compliance Offset Protocol: Destruction of...   \n","4  ARB Compliance Offset Protocol: Destruction of...   \n","\n","                        rule_based_type_mapping_list  \\\n","0               [(81, 'Improved Forest Management')]   \n","1  [(0, 'Ozone Depleting Substances Recovery & De...   \n","2  [(58, 'Ozone Depleting Substances Recovery & D...   \n","3  [(0, 'Ozone Depleting Substances Recovery & De...   \n","4  [(0, 'Ozone Depleting Substances Recovery & De...   \n","\n","                       rule_based_type_mapping_first  \\\n","0                         Improved Forest Management   \n","1  Ozone Depleting Substances Recovery & Destruction   \n","2  Ozone Depleting Substances Recovery & Destruction   \n","3  Ozone Depleting Substances Recovery & Destruction   \n","4  Ozone Depleting Substances Recovery & Destruction   \n","\n","                                       vrod_v11_type  \n","0                         Improved Forest Management  \n","1  Ozone Depleting Substances Recovery & Destruction  \n","2  Ozone Depleting Substances Recovery & Destruction  \n","3  Ozone Depleting Substances Recovery & Destruction  \n","4  Ozone Depleting Substances Recovery & Destruction  \n","\n","[5 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-6f0cc5f6-aecc-4819-8f0b-0396bd923331\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>project_id</th>\n","      <th>project_name</th>\n","      <th>voluntary_registry</th>\n","      <th>voluntary_status</th>\n","      <th>reduction_removal</th>\n","      <th>project_type_from_the_registry</th>\n","      <th>region</th>\n","      <th>country</th>\n","      <th>state</th>\n","      <th>project_site_location</th>\n","      <th>...</th>\n","      <th>arb_project_type</th>\n","      <th>version_string</th>\n","      <th>arb_harmonized_methodology</th>\n","      <th>car_harmonized_methodology</th>\n","      <th>methodology_protocol</th>\n","      <th>harmonized_methodology_protocol</th>\n","      <th>fully_harmonized_methodology_protocol</th>\n","      <th>rule_based_type_mapping_list</th>\n","      <th>rule_based_type_mapping_first</th>\n","      <th>vrod_v11_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ACR586</td>\n","      <td>18 Reserves Forest Carbon Project</td>\n","      <td>ACR</td>\n","      <td>Registered</td>\n","      <td>NaN</td>\n","      <td>Forest Carbon</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>OHIO</td>\n","      <td>Near Cleveland</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Improved Forest Management (IFM) on Non-Federa...</td>\n","      <td>ACR Improved Forest Management (IFM) on Non-Fe...</td>\n","      <td>ACR Improved Forest Management (IFM) on Non-Fe...</td>\n","      <td>[(81, 'Improved Forest Management')]</td>\n","      <td>Improved Forest Management</td>\n","      <td>Improved Forest Management</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ACR206</td>\n","      <td>2014-P4</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>ARKANSAS</td>\n","      <td>El Dorado</td>\n","      <td>...</td>\n","      <td>ODS</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(0, 'Ozone Depleting Substances Recovery &amp; De...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ACR203</td>\n","      <td>2014-P5</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>ARKANSAS</td>\n","      <td>El Dorado</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(58, 'Ozone Depleting Substances Recovery &amp; D...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ACR521</td>\n","      <td>A-Gas 1-2020</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>OHIO</td>\n","      <td>Bowling Green</td>\n","      <td>...</td>\n","      <td>ODS</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(0, 'Ozone Depleting Substances Recovery &amp; De...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ACR522</td>\n","      <td>A-Gas 2-2020</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>OHIO</td>\n","      <td>Bowling Green</td>\n","      <td>...</td>\n","      <td>ODS</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(0, 'Ozone Depleting Substances Recovery &amp; De...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f0cc5f6-aecc-4819-8f0b-0396bd923331')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f0cc5f6-aecc-4819-8f0b-0396bd923331 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f0cc5f6-aecc-4819-8f0b-0396bd923331');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-df638115-0f8d-463e-a325-d5fba680a210\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-df638115-0f8d-463e-a325-d5fba680a210')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-df638115-0f8d-463e-a325-d5fba680a210 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_preprocessed"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["data_preprocessed_no_small_classes = data_preprocessed[data_preprocessed.project_id.isin(train_proj_ids + val_proj_ids)]"],"metadata":{"id":"0nxJiBBrDUlp","executionInfo":{"status":"ok","timestamp":1721025437210,"user_tz":420,"elapsed":34,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["len(data_preprocessed_no_small_classes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DUgsGVleE_M4","executionInfo":{"status":"ok","timestamp":1721025437210,"user_tz":420,"elapsed":33,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"b8d535ef-386b-4ad5-f09f-2fb76f1b6962"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7147"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["target_labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4X-jjCCvOIXY","executionInfo":{"status":"ok","timestamp":1721027652570,"user_tz":420,"elapsed":209,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"4a38004c-b742-4dc2-f76f-05ac12baadaf"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Advanced Refrigerants': 0,\n"," 'Afforestation/Reforestation': 1,\n"," 'Avoided Forest Conversion': 2,\n"," 'Avoided Grassland Conversion': 3,\n"," 'Biodigesters': 4,\n"," 'Biomass': 5,\n"," 'Brick Manufacturing Emission Reductions': 6,\n"," 'Bundled Energy Efficiency': 7,\n"," 'Clean Water': 8,\n"," 'Community Boreholes': 9,\n"," 'Composting': 10,\n"," 'Cookstoves': 11,\n"," 'Electric Vehicles & Charging': 12,\n"," 'Energy Efficiency': 13,\n"," 'Fuel Switching': 14,\n"," 'Geothermal': 15,\n"," 'HFC Refrigerant Reclamation': 16,\n"," 'HFC Replacement in Foam Production': 17,\n"," 'Hydropower': 18,\n"," 'Improved Forest Management': 19,\n"," 'Improved Irrigation Management': 20,\n"," 'Landfill Methane': 21,\n"," 'Lighting': 22,\n"," 'Manure Methane Digester': 23,\n"," 'Methane Recovery in Wastewater': 24,\n"," 'Mine Methane Capture': 25,\n"," 'N2O Destruction in Nitric Acid Production': 26,\n"," 'Natural Gas Electricity Generation': 27,\n"," 'Ozone Depleting Substances Recovery & Destruction': 28,\n"," 'RE Bundled': 29,\n"," 'REDD+': 30,\n"," 'Rice Emission Reductions': 31,\n"," 'Solar - Centralized': 32,\n"," 'Solar - Distributed': 33,\n"," 'Solar Lighting': 34,\n"," 'Solar Water Heaters': 35,\n"," 'Solid Waste Separation': 36,\n"," 'Sustainable Agriculture': 37,\n"," 'Sustainable Grassland Management': 38,\n"," 'Truck Stop Electrification': 39,\n"," 'Waste Diversion': 40,\n"," 'Waste Gas Recovery': 41,\n"," 'Waste Heat Recovery': 42,\n"," 'Waste Incineration': 43,\n"," 'Waste Recycling': 44,\n"," 'Wetland Restoration': 45,\n"," 'Wind': 46}"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["target_names = list(np.unique(data_preprocessed_no_small_classes.sort_values(['vrod_v11_type'])['vrod_v11_type']))\n","target_labels = {target_names[i]:i for i in range(len(target_names))}\n","\n","def generate_integer_labels(df):\n","  df['type_label'] = df['vrod_v11_type'].map(target_labels)\n","  return df\n","\n","data_preprocessed_no_small_classes = generate_integer_labels(data_preprocessed_no_small_classes)"],"metadata":{"id":"G95qUPkwH1jo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721025437210,"user_tz":420,"elapsed":31,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"2bd79e22-8cfe-47de-bc84-733ac4a41639"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-19-29d50dfe351b>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['type_label'] = df['vrod_v11_type'].map(target_labels)\n"]}]},{"cell_type":"code","source":["data_train = data_preprocessed_no_small_classes[data_preprocessed_no_small_classes.project_id.isin(train_proj_ids)]"],"metadata":{"id":"tZ2lVHe3uS0K","executionInfo":{"status":"ok","timestamp":1721025437210,"user_tz":420,"elapsed":10,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["data_valid = data_preprocessed_no_small_classes[data_preprocessed_no_small_classes.project_id.isin(val_proj_ids)]"],"metadata":{"id":"DZszv8cMvDRH","executionInfo":{"status":"ok","timestamp":1721025437211,"user_tz":420,"elapsed":11,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","execution_count":22,"metadata":{"id":"Fn45DDCjZFH3","executionInfo":{"status":"ok","timestamp":1721025437211,"user_tz":420,"elapsed":10,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"outputs":[],"source":["MAX_SEQUENCE_LENGTH = 124 # Using 124 for max sequence length in our data."]},{"cell_type":"code","source":["data_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hIvVaQPCw4w9","executionInfo":{"status":"ok","timestamp":1721025437211,"user_tz":420,"elapsed":10,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"7ef81197-8e3b-4c32-e087-ec9f5e1066e3"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     project_id                                       project_name  \\\n","1        ACR206                                            2014-P4   \n","2        ACR203                                            2014-P5   \n","3        ACR521                                       A-Gas 1-2020   \n","4        ACR522                                       A-Gas 2-2020   \n","6        ACR443                                       A-Gas 2019-3   \n","...         ...                                                ...   \n","9082    VCS2166  Chongqing Youyang County Youchou Hydropower St...   \n","9083    VCS2162  2 x 3.5 MW Ullunkal Hydro Power Project in Ker...   \n","9084    VCS2157                                    BAESA Project `   \n","9086    VCS2126  7.3 MW Bundled Wind Power Project by Oswal Cables   \n","9087    VCS2120  Fuel - Wood Saving with Improved Cookstoves in...   \n","\n","     voluntary_registry voluntary_status  reduction_removal  \\\n","1                   ACR              NaN                NaN   \n","2                   ACR              NaN                NaN   \n","3                   ACR              NaN                NaN   \n","4                   ACR              NaN                NaN   \n","6                   ACR              NaN                NaN   \n","...                 ...              ...                ...   \n","9082                VCS        Withdrawn                NaN   \n","9083                VCS        Withdrawn                NaN   \n","9084                VCS        Withdrawn                NaN   \n","9086                VCS        Withdrawn                NaN   \n","9087                VCS   Late to verify                NaN   \n","\n","                         project_type_from_the_registry region   country  \\\n","1                            Ozone Depleting Substances    NaN        US   \n","2                            Ozone Depleting Substances    NaN        US   \n","3                            Ozone Depleting Substances    NaN        US   \n","4                            Ozone Depleting Substances    NaN        US   \n","6                            Ozone Depleting Substances    NaN        US   \n","...                                                 ...    ...       ...   \n","9082  Energy industries (renewable/non-renewable sou...    NaN     China   \n","9083  Energy industries (renewable/non-renewable sou...    NaN     India   \n","9084  Energy industries (renewable/non-renewable sou...    NaN    Brazil   \n","9086                           Manufacturing industries    NaN     India   \n","9087                                      Energy demand    NaN  Cambodia   \n","\n","         state             project_site_location  ... version_string  \\\n","1     ARKANSAS                         El Dorado  ...            NaN   \n","2     ARKANSAS                         El Dorado  ...            NaN   \n","3         OHIO                     Bowling Green  ...            NaN   \n","4         OHIO                     Bowling Green  ...            NaN   \n","6         OHIO  Wood County, Bowling Green, Ohio  ...            NaN   \n","...        ...                               ...  ...            ...   \n","9082       NaN                               NaN  ...            NaN   \n","9083       NaN                               NaN  ...            NaN   \n","9084       NaN                               NaN  ...            NaN   \n","9086       NaN                               NaN  ...            NaN   \n","9087       NaN                               NaN  ...            NaN   \n","\n","                             arb_harmonized_methodology  \\\n","1     ARB Compliance Offset Protocol: Destruction of...   \n","2                                                   NaN   \n","3     ARB Compliance Offset Protocol: Destruction of...   \n","4     ARB Compliance Offset Protocol: Destruction of...   \n","6     ARB Compliance Offset Protocol: Destruction of...   \n","...                                                 ...   \n","9082                                                NaN   \n","9083                                                NaN   \n","9084                                                NaN   \n","9086                                                NaN   \n","9087                                                NaN   \n","\n","     car_harmonized_methodology  \\\n","1                           NaN   \n","2                           NaN   \n","3                           NaN   \n","4                           NaN   \n","6                           NaN   \n","...                         ...   \n","9082                        NaN   \n","9083                        NaN   \n","9084                        NaN   \n","9086                        NaN   \n","9087                        NaN   \n","\n","                                   methodology_protocol  \\\n","1     ARB Compliance Offset Protocol: Destruction of...   \n","2     ARB Compliance Offset Protocol: Destruction of...   \n","3     ARB Compliance Offset Protocol: Destruction of...   \n","4     ARB Compliance Offset Protocol: Destruction of...   \n","6     ARB Compliance Offset Protocol: Destruction of...   \n","...                                                 ...   \n","9082                                            ACM0002   \n","9083                                           AMS-I.D.   \n","9084                                            ACM0002   \n","9086                                            ACM0002   \n","9087                                          AMS-II.G.   \n","\n","                        harmonized_methodology_protocol  \\\n","1     ARB Compliance Offset Protocol: Destruction of...   \n","2     ARB Compliance Offset Protocol: Destruction of...   \n","3     ARB Compliance Offset Protocol: Destruction of...   \n","4     ARB Compliance Offset Protocol: Destruction of...   \n","6     ARB Compliance Offset Protocol: Destruction of...   \n","...                                                 ...   \n","9082  ACM0002 Grid-connected electricity generation ...   \n","9083  AMS-I.D. Grid connected renewable electricity ...   \n","9084  ACM0002 Grid-connected electricity generation ...   \n","9086  ACM0002 Grid-connected electricity generation ...   \n","9087  AMS-II.G. Energy efficiency measures in therma...   \n","\n","                  fully_harmonized_methodology_protocol  \\\n","1     ARB Compliance Offset Protocol: Destruction of...   \n","2     ARB Compliance Offset Protocol: Destruction of...   \n","3     ARB Compliance Offset Protocol: Destruction of...   \n","4     ARB Compliance Offset Protocol: Destruction of...   \n","6     ARB Compliance Offset Protocol: Destruction of...   \n","...                                                 ...   \n","9082  ACM0002 Grid-connected electricity generation ...   \n","9083  AMS-I.D. Grid connected renewable electricity ...   \n","9084  ACM0002 Grid-connected electricity generation ...   \n","9086  ACM0002 Grid-connected electricity generation ...   \n","9087  AMS-II.G. Energy efficiency measures in therma...   \n","\n","                           rule_based_type_mapping_list  \\\n","1     [(0, 'Ozone Depleting Substances Recovery & De...   \n","2     [(58, 'Ozone Depleting Substances Recovery & D...   \n","3     [(0, 'Ozone Depleting Substances Recovery & De...   \n","4     [(0, 'Ozone Depleting Substances Recovery & De...   \n","6     [(0, 'Ozone Depleting Substances Recovery & De...   \n","...                                                 ...   \n","9082                               [(12, 'Hydropower')]   \n","9083                               [(13, 'Hydropower')]   \n","9084                                                 []   \n","9086                                                 []   \n","9087                                                 []   \n","\n","                          rule_based_type_mapping_first  \\\n","1     Ozone Depleting Substances Recovery & Destruction   \n","2     Ozone Depleting Substances Recovery & Destruction   \n","3     Ozone Depleting Substances Recovery & Destruction   \n","4     Ozone Depleting Substances Recovery & Destruction   \n","6     Ozone Depleting Substances Recovery & Destruction   \n","...                                                 ...   \n","9082                                         Hydropower   \n","9083                                         Hydropower   \n","9084                                                NaN   \n","9086                                                NaN   \n","9087                                                NaN   \n","\n","                                          vrod_v11_type type_label  \n","1     Ozone Depleting Substances Recovery & Destruction         28  \n","2     Ozone Depleting Substances Recovery & Destruction         28  \n","3     Ozone Depleting Substances Recovery & Destruction         28  \n","4     Ozone Depleting Substances Recovery & Destruction         28  \n","6     Ozone Depleting Substances Recovery & Destruction         28  \n","...                                                 ...        ...  \n","9082                                         Hydropower         18  \n","9083                                         Hydropower         18  \n","9084                                         Hydropower         18  \n","9086                                               Wind         46  \n","9087                                         Cookstoves         11  \n","\n","[6433 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-cee1d1ef-6310-4ff3-8f37-3fee9e79b7ce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>project_id</th>\n","      <th>project_name</th>\n","      <th>voluntary_registry</th>\n","      <th>voluntary_status</th>\n","      <th>reduction_removal</th>\n","      <th>project_type_from_the_registry</th>\n","      <th>region</th>\n","      <th>country</th>\n","      <th>state</th>\n","      <th>project_site_location</th>\n","      <th>...</th>\n","      <th>version_string</th>\n","      <th>arb_harmonized_methodology</th>\n","      <th>car_harmonized_methodology</th>\n","      <th>methodology_protocol</th>\n","      <th>harmonized_methodology_protocol</th>\n","      <th>fully_harmonized_methodology_protocol</th>\n","      <th>rule_based_type_mapping_list</th>\n","      <th>rule_based_type_mapping_first</th>\n","      <th>vrod_v11_type</th>\n","      <th>type_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>ACR206</td>\n","      <td>2014-P4</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>ARKANSAS</td>\n","      <td>El Dorado</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(0, 'Ozone Depleting Substances Recovery &amp; De...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ACR203</td>\n","      <td>2014-P5</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>ARKANSAS</td>\n","      <td>El Dorado</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(58, 'Ozone Depleting Substances Recovery &amp; D...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ACR521</td>\n","      <td>A-Gas 1-2020</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>OHIO</td>\n","      <td>Bowling Green</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(0, 'Ozone Depleting Substances Recovery &amp; De...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ACR522</td>\n","      <td>A-Gas 2-2020</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>OHIO</td>\n","      <td>Bowling Green</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(0, 'Ozone Depleting Substances Recovery &amp; De...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>ACR443</td>\n","      <td>A-Gas 2019-3</td>\n","      <td>ACR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Ozone Depleting Substances</td>\n","      <td>NaN</td>\n","      <td>US</td>\n","      <td>OHIO</td>\n","      <td>Wood County, Bowling Green, Ohio</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>NaN</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>ARB Compliance Offset Protocol: Destruction of...</td>\n","      <td>[(0, 'Ozone Depleting Substances Recovery &amp; De...</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>Ozone Depleting Substances Recovery &amp; Destruction</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9082</th>\n","      <td>VCS2166</td>\n","      <td>Chongqing Youyang County Youchou Hydropower St...</td>\n","      <td>VCS</td>\n","      <td>Withdrawn</td>\n","      <td>NaN</td>\n","      <td>Energy industries (renewable/non-renewable sou...</td>\n","      <td>NaN</td>\n","      <td>China</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ACM0002</td>\n","      <td>ACM0002 Grid-connected electricity generation ...</td>\n","      <td>ACM0002 Grid-connected electricity generation ...</td>\n","      <td>[(12, 'Hydropower')]</td>\n","      <td>Hydropower</td>\n","      <td>Hydropower</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>9083</th>\n","      <td>VCS2162</td>\n","      <td>2 x 3.5 MW Ullunkal Hydro Power Project in Ker...</td>\n","      <td>VCS</td>\n","      <td>Withdrawn</td>\n","      <td>NaN</td>\n","      <td>Energy industries (renewable/non-renewable sou...</td>\n","      <td>NaN</td>\n","      <td>India</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>AMS-I.D.</td>\n","      <td>AMS-I.D. Grid connected renewable electricity ...</td>\n","      <td>AMS-I.D. Grid connected renewable electricity ...</td>\n","      <td>[(13, 'Hydropower')]</td>\n","      <td>Hydropower</td>\n","      <td>Hydropower</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>9084</th>\n","      <td>VCS2157</td>\n","      <td>BAESA Project `</td>\n","      <td>VCS</td>\n","      <td>Withdrawn</td>\n","      <td>NaN</td>\n","      <td>Energy industries (renewable/non-renewable sou...</td>\n","      <td>NaN</td>\n","      <td>Brazil</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ACM0002</td>\n","      <td>ACM0002 Grid-connected electricity generation ...</td>\n","      <td>ACM0002 Grid-connected electricity generation ...</td>\n","      <td>[]</td>\n","      <td>NaN</td>\n","      <td>Hydropower</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>9086</th>\n","      <td>VCS2126</td>\n","      <td>7.3 MW Bundled Wind Power Project by Oswal Cables</td>\n","      <td>VCS</td>\n","      <td>Withdrawn</td>\n","      <td>NaN</td>\n","      <td>Manufacturing industries</td>\n","      <td>NaN</td>\n","      <td>India</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ACM0002</td>\n","      <td>ACM0002 Grid-connected electricity generation ...</td>\n","      <td>ACM0002 Grid-connected electricity generation ...</td>\n","      <td>[]</td>\n","      <td>NaN</td>\n","      <td>Wind</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>9087</th>\n","      <td>VCS2120</td>\n","      <td>Fuel - Wood Saving with Improved Cookstoves in...</td>\n","      <td>VCS</td>\n","      <td>Late to verify</td>\n","      <td>NaN</td>\n","      <td>Energy demand</td>\n","      <td>NaN</td>\n","      <td>Cambodia</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>AMS-II.G.</td>\n","      <td>AMS-II.G. Energy efficiency measures in therma...</td>\n","      <td>AMS-II.G. Energy efficiency measures in therma...</td>\n","      <td>[]</td>\n","      <td>NaN</td>\n","      <td>Cookstoves</td>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6433 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cee1d1ef-6310-4ff3-8f37-3fee9e79b7ce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cee1d1ef-6310-4ff3-8f37-3fee9e79b7ce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cee1d1ef-6310-4ff3-8f37-3fee9e79b7ce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-17d0463f-2c46-4d67-a91b-9a6c8c0a9133\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-17d0463f-2c46-4d67-a91b-9a6c8c0a9133')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-17d0463f-2c46-4d67-a91b-9a6c8c0a9133 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_58629242-ca67-4296-b122-6ba07e330cd8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_58629242-ca67-4296-b122-6ba07e330cd8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_train"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["data_train.value_counts('vrod_v11_type')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3fkNuhTa6ml1","executionInfo":{"status":"ok","timestamp":1721025437431,"user_tz":420,"elapsed":228,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"e5541d7a-1653-49c7-ef29-9c6b5f7a36cb"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["vrod_v11_type\n","Cookstoves                                           1051\n","Wind                                                  747\n","Improved Forest Management                            539\n","Hydropower                                            377\n","Afforestation/Reforestation                           340\n","Manure Methane Digester                               318\n","Clean Water                                           292\n","Landfill Methane                                      273\n","Solar - Centralized                                   231\n","Ozone Depleting Substances Recovery & Destruction     213\n","REDD+                                                 201\n","Rice Emission Reductions                              195\n","Biomass                                               194\n","Community Boreholes                                   187\n","Biodigesters                                          181\n","Sustainable Agriculture                               126\n","Bundled Energy Efficiency                             120\n","Mine Methane Capture                                  106\n","Methane Recovery in Wastewater                         70\n","Solar - Distributed                                    62\n","Composting                                             48\n","HFC Replacement in Foam Production                     44\n","Lighting                                               41\n","Sustainable Grassland Management                       39\n","Waste Heat Recovery                                    37\n","HFC Refrigerant Reclamation                            34\n","Solar Lighting                                         33\n","Wetland Restoration                                    29\n","Geothermal                                             27\n","RE Bundled                                             24\n","Energy Efficiency                                      23\n","Truck Stop Electrification                             23\n","Advanced Refrigerants                                  23\n","Avoided Grassland Conversion                           20\n","Electric Vehicles & Charging                           19\n","Natural Gas Electricity Generation                     19\n","Waste Recycling                                        18\n","N2O Destruction in Nitric Acid Production              14\n","Improved Irrigation Management                         14\n","Brick Manufacturing Emission Reductions                13\n","Waste Incineration                                     13\n","Waste Diversion                                        12\n","Solar Water Heaters                                    12\n","Avoided Forest Conversion                              11\n","Waste Gas Recovery                                     10\n","Fuel Switching                                          9\n","Solid Waste Separation                                  1\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# Undersampling most frequent classes\n","class_size = 800\n","\n","res = data_train.groupby('vrod_v11_type').apply(lambda x: x.sample(n=min(class_size, len(x))))\n","res = res.reset_index(drop=True)\n","print(res['vrod_v11_type'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"krhC_fbX62DR","executionInfo":{"status":"ok","timestamp":1721025437431,"user_tz":420,"elapsed":7,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"85c20095-16f4-40a9-f1fe-173584404e0b"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["vrod_v11_type\n","Cookstoves                                           800\n","Wind                                                 747\n","Improved Forest Management                           539\n","Hydropower                                           377\n","Afforestation/Reforestation                          340\n","Manure Methane Digester                              318\n","Clean Water                                          292\n","Landfill Methane                                     273\n","Solar - Centralized                                  231\n","Ozone Depleting Substances Recovery & Destruction    213\n","REDD+                                                201\n","Rice Emission Reductions                             195\n","Biomass                                              194\n","Community Boreholes                                  187\n","Biodigesters                                         181\n","Sustainable Agriculture                              126\n","Bundled Energy Efficiency                            120\n","Mine Methane Capture                                 106\n","Methane Recovery in Wastewater                        70\n","Solar - Distributed                                   62\n","Composting                                            48\n","HFC Replacement in Foam Production                    44\n","Lighting                                              41\n","Sustainable Grassland Management                      39\n","Waste Heat Recovery                                   37\n","HFC Refrigerant Reclamation                           34\n","Solar Lighting                                        33\n","Wetland Restoration                                   29\n","Geothermal                                            27\n","RE Bundled                                            24\n","Energy Efficiency                                     23\n","Truck Stop Electrification                            23\n","Advanced Refrigerants                                 23\n","Avoided Grassland Conversion                          20\n","Electric Vehicles & Charging                          19\n","Natural Gas Electricity Generation                    19\n","Waste Recycling                                       18\n","N2O Destruction in Nitric Acid Production             14\n","Improved Irrigation Management                        14\n","Brick Manufacturing Emission Reductions               13\n","Waste Incineration                                    13\n","Waste Diversion                                       12\n","Solar Water Heaters                                   12\n","Avoided Forest Conversion                             11\n","Waste Gas Recovery                                    10\n","Fuel Switching                                         9\n","Solid Waste Separation                                 1\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["# Undersampling lower frequency classes\n","lst = [res]\n","for class_index, group in res.groupby('vrod_v11_type'):\n","    lst.append(group.sample(class_size-len(group), replace=True))\n","res_new = pd.concat(lst)"],"metadata":{"id":"CwJ8tin77_Rt","executionInfo":{"status":"ok","timestamp":1721025437431,"user_tz":420,"elapsed":4,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["data_train = res_new"],"metadata":{"id":"tCklCW_M9cdF","executionInfo":{"status":"ok","timestamp":1721025437431,"user_tz":420,"elapsed":3,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["def generate_input_text_col(df):\n","  cols = ['project_name',\n","          'fully_harmonized_methodology_protocol',\n","          'region',\n","          'voluntary_registry',\n","          'project_type_from_the_registry',\n","          'project_developer',\n","          'arborwaproject']\n","  df['input_text'] = df[cols].apply(lambda row: '. '.join(row.values.astype(str)), axis=1)\n","  return df"],"metadata":{"id":"Cpq28mzgwPoB","executionInfo":{"status":"ok","timestamp":1721025437432,"user_tz":420,"elapsed":4,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["data_train = generate_input_text_col(data_train)\n","data_valid = generate_input_text_col(data_valid)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I-1RfC1dyyfA","executionInfo":{"status":"ok","timestamp":1721025438044,"user_tz":420,"elapsed":616,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"a20649a5-f95b-417e-fc56-906a35b772e2"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-28-20974c6dbfac>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['input_text'] = df[cols].apply(lambda row: '. '.join(row.values.astype(str)), axis=1)\n"]}]},{"cell_type":"code","source":["data_train.to_csv('/content/drive/MyDrive/capstone_modeling/data_train_oversampled_kh.csv')"],"metadata":{"id":"CMYej7YjR5fp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Our experiments involve AUGMENTING / APPENDING on our TRAINING DATA.\n","# Define a function to process and tokenize training data for re-use throughout experiments.\n","def process_data(df):\n","\n","  texts = list(df.input_text)\n","  labels = np.array(df.type_label)\n","  encodings = bert_tokenizer(texts, truncation=True, padding='max_length', max_length=MAX_SEQUENCE_LENGTH, return_tensors='tf')\n","\n","  return texts, labels, encodings"],"metadata":{"id":"kehCb_Idbs_m","executionInfo":{"status":"ok","timestamp":1721025438045,"user_tz":420,"elapsed":7,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","execution_count":31,"metadata":{"id":"ahYTbxjYFeDY","executionInfo":{"status":"ok","timestamp":1721025464883,"user_tz":420,"elapsed":26844,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"outputs":[],"source":["(train_texts, train_labels, train_encodings) = process_data(data_train)\n","(valid_texts, valid_labels, valid_encodings) = process_data(data_valid)"]},{"cell_type":"markdown","metadata":{"id":"-dq8u44i6Y_4"},"source":["# **Model Construction**"]},{"cell_type":"code","source":["# Suppress missing gradients warnings\n","import logging\n","logging.getLogger('tensorflow').setLevel(logging.ERROR)"],"metadata":{"id":"4w4nCVNjCDT_","executionInfo":{"status":"ok","timestamp":1721025464884,"user_tz":420,"elapsed":5,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","execution_count":33,"metadata":{"id":"AfsDGZ6AFuMn","executionInfo":{"status":"ok","timestamp":1721025464884,"user_tz":420,"elapsed":3,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"outputs":[],"source":["# Bert Model creation\n","def create_model(max_sequence_length=MAX_SEQUENCE_LENGTH,\n","                 num_train_layers=3,\n","                 dropout=0.3,\n","                 num_classes=51,\n","                 hidden_size=128,\n","                 learning_rate=0.00005,\n","                 msd_samples=5):\n","\n","    if num_train_layers == 0:\n","        # Freeze all layers of pre-trained BERT model\n","        bert_model.trainable = False\n","\n","    elif num_train_layers == 12:\n","        # Train all layers of the BERT model\n","        bert_model.trainable = True\n","\n","    else:\n","        # Restrict training to the num_train_layers outer transformer layers\n","        retrain_layers = []\n","\n","        for retrain_layer_number in range(num_train_layers):\n","\n","            layer_code = '_' + str(11 - retrain_layer_number)\n","            retrain_layers.append(layer_code)\n","\n","        print('retrain layers: ', retrain_layers)\n","\n","        for w in bert_model.weights:\n","            if not any([x in w.name for x in retrain_layers]):\n","                #print('freezing: ', w)\n","                w._trainable = False\n","\n","    # Inputs\n","    input_ids = tf.keras.layers.Input(shape=(max_sequence_length,), dtype=tf.int64, name='input_ids_layer')\n","    token_type_ids = tf.keras.layers.Input(shape=(max_sequence_length,), dtype=tf.int64, name='token_type_ids_layer')\n","    attention_mask = tf.keras.layers.Input(shape=(max_sequence_length,), dtype=tf.int64, name='attention_mask_layer')\n","\n","    bert_inputs = {'input_ids': input_ids,\n","                   'token_type_ids': token_type_ids,\n","                   'attention_mask': attention_mask}\n","\n","    bert_out = bert_model(bert_inputs)\n","\n","    pooler_token = bert_out[1]\n","\n","    # Emotion Classification: Linear Classification Layer\n","    hidden = tf.keras.layers.Dense(hidden_size, activation='relu', name='hidden_layer')(pooler_token)\n","\n","    hidden = tf.keras.layers.Dropout(dropout)(hidden)\n","\n","    classification = tf.keras.layers.Dense(num_classes, activation='softmax',name='classification_layer')(hidden)\n","\n","    # Model and compilation.\n","    model = tf.keras.Model(inputs=[input_ids, token_type_ids, attention_mask], outputs=classification)\n","\n","    model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=learning_rate),\n","                      loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=False),\n","                      metrics='accuracy')\n","\n","    return model"]},{"cell_type":"markdown","source":["## **Model Summary**"],"metadata":{"id":"wk2QPsUTrilJ"}},{"cell_type":"code","execution_count":34,"metadata":{"id":"OFWI_7pa84vJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721025472538,"user_tz":420,"elapsed":7657,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"c8d46526-508c-4ec9-a598-8928d17c4c10"},"outputs":[{"output_type":"stream","name":"stdout","text":["retrain layers:  ['_11', '_10', '_9']\n"]}],"source":["type_classification_model = create_model()"]},{"cell_type":"code","source":["type_classification_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZHQ9TiaArpCM","executionInfo":{"status":"ok","timestamp":1721025472539,"user_tz":420,"elapsed":34,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"d84e6b5d-323e-4be4-c496-be47de3b1a4d"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                Output Shape                 Param #   Connected to                  \n","==================================================================================================\n"," attention_mask_layer (Inpu  [(None, 124)]                0         []                            \n"," tLayer)                                                                                          \n","                                                                                                  \n"," input_ids_layer (InputLaye  [(None, 124)]                0         []                            \n"," r)                                                                                               \n","                                                                                                  \n"," token_type_ids_layer (Inpu  [(None, 124)]                0         []                            \n"," tLayer)                                                                                          \n","                                                                                                  \n"," tf_bert_model (TFBertModel  TFBaseModelOutputWithPooli   1083102   ['attention_mask_layer[0][0]',\n"," )                           ngAndCrossAttentions(last_   72         'input_ids_layer[0][0]',     \n","                             hidden_state=(None, 124, 7              'token_type_ids_layer[0][0]']\n","                             68),                                                                 \n","                              pooler_output=(None, 768)                                           \n","                             , past_key_values=None, hi                                           \n","                             dden_states=((None, 124, 7                                           \n","                             68),                                                                 \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768),                                                   \n","                              (None, 124, 768)),                                                  \n","                              attentions=None, cross_at                                           \n","                             tentions=None)                                                       \n","                                                                                                  \n"," hidden_layer (Dense)        (None, 128)                  98432     ['tf_bert_model[0][14]']      \n","                                                                                                  \n"," dropout_37 (Dropout)        (None, 128)                  0         ['hidden_layer[0][0]']        \n","                                                                                                  \n"," classification_layer (Dens  (None, 51)                   6579      ['dropout_37[0][0]']          \n"," e)                                                                                               \n","                                                                                                  \n","==================================================================================================\n","Total params: 108415283 (413.57 MB)\n","Trainable params: 108415283 (413.57 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":227},"id":"-_dJuO099Xgf","outputId":"79483f7f-5beb-4bfe-8823-4c261fc6d419","executionInfo":{"status":"ok","timestamp":1721025472877,"user_tz":420,"elapsed":356,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":36}],"source":["keras.utils.plot_model(type_classification_model, show_shapes=True, dpi=90)"]},{"cell_type":"code","source":["model_history = type_classification_model.fit([train_encodings.input_ids, train_encodings.token_type_ids, train_encodings.attention_mask],\n","                                              train_labels,\n","                                              validation_data=([valid_encodings.input_ids, valid_encodings.token_type_ids, valid_encodings.attention_mask], valid_labels),\n","                                              batch_size=24,\n","                                              epochs=2\n","                                              )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0uwiTFmMKPdJ","executionInfo":{"status":"ok","timestamp":1721027065080,"user_tz":420,"elapsed":1582247,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"718f20d8-34a2-47fb-c16d-f3d7e7e31194","collapsed":true},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/2\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/ops/structured_function.py:258: UserWarning: Even though the `tf.config.experimental_run_functions_eagerly` option is set, this option does not apply to tf.data functions. To force eager execution of tf.data functions, please use `tf.data.experimental.enable_debug_mode()`.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["1567/1567 [==============================] - 770s 490ms/step - loss: 0.7245 - accuracy: 0.8417 - val_loss: 0.2147 - val_accuracy: 0.9482\n","Epoch 2/2\n","1567/1567 [==============================] - 758s 483ms/step - loss: 0.0878 - accuracy: 0.9815 - val_loss: 0.1799 - val_accuracy: 0.9566\n"]}]},{"cell_type":"code","source":["valid_labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gRatAlekOWuR","executionInfo":{"status":"ok","timestamp":1721027361255,"user_tz":420,"elapsed":269,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"d3595f9b-5cbb-4476-c796-ae597d15d8f2"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([19, 16,  0,  0, 16, 19, 19, 19, 19, 19,  0, 19, 19, 25, 23, 28, 28,\n","       19, 19, 19, 19, 17, 17, 17, 19, 19, 45, 23, 19, 19, 16, 16, 19, 13,\n","       23, 25, 19, 19, 25, 28, 28,  1,  1, 17, 17, 28, 28, 28, 28, 28, 28,\n","       28, 28, 39, 39, 28, 19, 28, 28,  3, 21, 23, 23, 21, 23, 19, 19, 19,\n","       19, 19, 19, 19, 19, 19, 19, 19, 21, 19, 28, 28, 28, 19, 19, 28, 28,\n","       28, 28, 23, 21, 21, 28, 21, 19, 19, 19, 19, 23, 19, 19, 19, 19, 19,\n","        2,  3, 21, 19, 23, 23, 21, 19, 19, 21, 26, 23, 19, 23, 23, 23, 21,\n","       19, 21, 23, 23, 19, 21, 23, 23, 19, 19, 21, 11, 11, 11, 11,  8, 11,\n","       21, 11, 32, 11,  8,  8,  8, 15, 11, 11, 32,  8,  8,  8,  5, 33, 33,\n","       11, 11, 11, 11, 46, 33, 33, 11, 11, 11, 11,  8,  8,  8,  7, 11,  7,\n","       11, 21,  8, 11,  8, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,  8,\n","        4, 11, 11, 11, 11,  7,  7, 32, 11, 46, 11, 46, 46, 34, 11, 11,  8,\n","        8,  8,  8,  8,  5, 46, 11,  8,  8, 11,  4,  1,  8,  9,  9,  8,  8,\n","       11,  7,  7,  7,  8, 46, 11, 11, 11, 46, 14, 11, 32,  9,  9, 11,  9,\n","        9, 46, 11, 46, 46,  9, 46, 29, 40, 11, 11,  8,  7,  8,  8,  8, 18,\n","        7, 32, 32, 32, 32,  9,  9, 11, 33, 11,  8, 46,  8, 46,  1,  1,  1,\n","       46, 46,  4, 11, 13, 46, 11,  4, 11,  8, 11, 46, 11,  8,  9, 11,  4,\n","        4, 11,  9,  9,  9,  9,  4,  9,  9,  5,  9, 11, 11, 34, 32, 34, 34,\n","       32, 32, 18, 46, 46, 18, 18, 11, 11, 11, 24, 18,  4, 35,  5, 11, 46,\n","       18, 11, 11, 11, 18, 46, 46, 46, 11, 46, 11, 11,  9,  9, 46, 32, 11,\n","       46, 11,  9, 11, 24, 11, 46, 11,  4,  5,  8,  1,  4,  5, 11,  4,  4,\n","       11, 11, 32, 11, 11, 46, 11, 11, 11,  7,  7,  4,  4, 11,  4, 18, 11,\n","       46,  9, 46,  4,  7,  7, 46, 11, 46, 18, 11, 20, 11,  4, 46, 10,  4,\n","        4, 18, 22, 18, 21, 18, 21, 18, 11, 11, 23, 37, 43, 38,  1, 30, 19,\n","       37, 11, 24, 37, 33,  1, 37, 30, 30, 24, 44,  1, 18, 44, 19, 23, 23,\n","        1, 19, 37, 11, 23, 10, 15,  1,  1, 21, 30, 30, 12, 23, 23, 11, 19,\n","       38, 23,  1, 23, 11, 21, 37, 37, 23, 23, 37, 30, 19, 21,  1, 37, 23,\n","       31, 23, 11, 11, 31, 21, 31, 31, 11, 19, 38, 23, 31, 31,  1, 30, 32,\n","        1,  1, 37,  1, 11, 11, 33, 37, 37, 19, 31, 21, 11, 31, 31,  1,  1,\n","       11, 31, 31, 30, 31, 31, 31, 11, 11, 31, 31, 37, 11,  4, 19, 11,  1,\n","       30, 31, 31, 31, 21, 38, 21, 20, 11, 11, 45, 23,  1, 11, 10, 30, 31,\n","        7, 11, 11, 41, 25,  5, 23, 23,  1, 31, 30,  1,  1, 21, 30, 28, 30,\n","       21, 45,  1, 31, 11, 11, 23, 11, 30, 30, 11, 30, 11, 19, 32, 25, 46,\n","        5, 46, 46, 46, 32, 46,  5, 21, 25, 42, 18, 46, 46, 18, 26, 46, 37,\n","       46, 46, 46, 46, 18,  5, 46, 18, 18, 15, 46, 46,  5, 22, 25, 25, 25,\n","       25, 25,  5, 46, 18, 18, 18, 46, 46, 18, 42, 42, 18,  5, 42, 18,  5,\n","        5, 46, 46,  5,  1, 18, 32, 18, 32, 46, 32, 32, 46, 18, 32, 32,  5,\n","       46, 46, 10, 46,  5, 12, 27,  6,  1, 46, 30, 46, 29, 46, 46, 32,  1,\n","       32, 18,  1, 46, 29, 46, 32, 24, 22, 27, 46, 11, 18, 46, 46,  5, 18,\n","       18, 24, 24,  1, 18,  1, 18, 18, 24, 46, 19,  1, 46, 32,  5, 18, 46,\n","       30,  5,  1, 46, 46,  1, 30, 46, 46, 46, 22, 18,  1, 18, 21, 30, 46,\n","       30, 10, 46, 18, 46, 46, 18, 46, 46, 45, 46, 18, 21, 18,  5, 30, 46])"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["target_names_real = list(filter(lambda x: x != 'Solid Waste Separation', target_names))"],"metadata":{"id":"6Y0NbaFJPlx4","executionInfo":{"status":"ok","timestamp":1721027862126,"user_tz":420,"elapsed":207,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["preds = type_classification_model.predict([valid_encodings.input_ids, valid_encodings.token_type_ids, valid_encodings.attention_mask])\n","preds_classes = tf.argmax(preds, axis=-1)\n","print(classification_report(valid_labels, preds_classes, target_names = target_names_real))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VVU8ORJJN-hl","executionInfo":{"status":"ok","timestamp":1721027875310,"user_tz":420,"elapsed":6575,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"cb51b78f-7779-426d-da33-9a6e635618fa"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/ops/structured_function.py:258: UserWarning: Even though the `tf.config.experimental_run_functions_eagerly` option is set, this option does not apply to tf.data functions. To force eager execution of tf.data functions, please use `tf.data.experimental.enable_debug_mode()`.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["23/23 [==============================] - 6s 266ms/step\n","                                                   precision    recall  f1-score   support\n","\n","                            Advanced Refrigerants       1.00      1.00      1.00         3\n","                      Afforestation/Reforestation       0.95      0.95      0.95        37\n","                        Avoided Forest Conversion       1.00      1.00      1.00         1\n","                     Avoided Grassland Conversion       1.00      1.00      1.00         2\n","                                     Biodigesters       1.00      0.95      0.97        20\n","                                          Biomass       0.86      0.82      0.84        22\n","          Brick Manufacturing Emission Reductions       1.00      1.00      1.00         1\n","                        Bundled Energy Efficiency       0.87      0.93      0.90        14\n","                                      Clean Water       1.00      0.88      0.94        33\n","                              Community Boreholes       0.84      1.00      0.91        21\n","                                       Composting       1.00      0.80      0.89         5\n","                                       Cookstoves       0.99      0.98      0.99       117\n","                     Electric Vehicles & Charging       1.00      1.00      1.00         2\n","                                Energy Efficiency       1.00      0.50      0.67         2\n","                                   Fuel Switching       0.00      0.00      0.00         1\n","                                       Geothermal       1.00      0.67      0.80         3\n","                      HFC Refrigerant Reclamation       1.00      1.00      1.00         4\n","               HFC Replacement in Foam Production       1.00      1.00      1.00         5\n","                                       Hydropower       1.00      0.98      0.99        42\n","                       Improved Forest Management       0.98      0.98      0.98        61\n","                   Improved Irrigation Management       1.00      1.00      1.00         2\n","                                 Landfill Methane       0.97      1.00      0.98        29\n","                                         Lighting       1.00      1.00      1.00         4\n","                          Manure Methane Digester       1.00      1.00      1.00        35\n","                   Methane Recovery in Wastewater       0.80      1.00      0.89         8\n","                             Mine Methane Capture       1.00      1.00      1.00        11\n","        N2O Destruction in Nitric Acid Production       1.00      1.00      1.00         2\n","               Natural Gas Electricity Generation       0.33      0.50      0.40         2\n","Ozone Depleting Substances Recovery & Destruction       1.00      1.00      1.00        24\n","                                       RE Bundled       0.43      1.00      0.60         3\n","                                            REDD+       0.95      0.95      0.95        22\n","                         Rice Emission Reductions       1.00      1.00      1.00        22\n","                              Solar - Centralized       0.90      1.00      0.95        26\n","                              Solar - Distributed       1.00      0.86      0.92         7\n","                                   Solar Lighting       1.00      1.00      1.00         4\n","                              Solar Water Heaters       1.00      1.00      1.00         1\n","                          Sustainable Agriculture       1.00      0.86      0.92        14\n","                 Sustainable Grassland Management       0.80      1.00      0.89         4\n","                       Truck Stop Electrification       1.00      1.00      1.00         2\n","                                  Waste Diversion       0.50      1.00      0.67         1\n","                               Waste Gas Recovery       1.00      1.00      1.00         1\n","                              Waste Heat Recovery       1.00      1.00      1.00         4\n","                               Waste Incineration       0.50      1.00      0.67         1\n","                                  Waste Recycling       1.00      0.50      0.67         2\n","                              Wetland Restoration       1.00      0.75      0.86         4\n","                                             Wind       0.99      0.95      0.97        83\n","\n","                                         accuracy                           0.96       714\n","                                        macro avg       0.91      0.91      0.89       714\n","                                     weighted avg       0.96      0.96      0.96       714\n","\n"]}]},{"cell_type":"code","source":["type_classification_model.save_weights('/content/drive/MyDrive/capstone_modeling/model_weights_sets/bert_type_prediction_splits/weights')"],"metadata":{"id":"XiTvTl5CSylR","executionInfo":{"status":"ok","timestamp":1721028016065,"user_tz":420,"elapsed":9539,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["type_classification_model_new = create_model()\n","\n","type_classification_model_new.load_weights('/content/drive/MyDrive/capstone_modeling/model_weights_sets/bert_type_prediction_splits/weights')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oPZ2fnAMTWKw","executionInfo":{"status":"ok","timestamp":1721028023974,"user_tz":420,"elapsed":5352,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"5f91bb7e-29d7-456e-8b93-01b6c65d45f1"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["retrain layers:  ['_11', '_10', '_9']\n"]},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.checkpoint.checkpoint.CheckpointLoadStatus at 0x7d6ccfbd96c0>"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["preds = type_classification_model_new.predict([valid_encodings.input_ids, valid_encodings.token_type_ids, valid_encodings.attention_mask])\n","preds_classes = tf.argmax(preds, axis=-1)\n","print(classification_report(valid_labels, preds_classes, target_names = target_names_real))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y4jEmJBmTcTG","executionInfo":{"status":"ok","timestamp":1721028034397,"user_tz":420,"elapsed":10426,"user":{"displayName":"Kevin Ngoc Hoang","userId":"02400532957225896516"}},"outputId":"ec1e1228-dfbf-42f5-856b-5e7c00df4fc7"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/ops/structured_function.py:258: UserWarning: Even though the `tf.config.experimental_run_functions_eagerly` option is set, this option does not apply to tf.data functions. To force eager execution of tf.data functions, please use `tf.data.experimental.enable_debug_mode()`.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["23/23 [==============================] - 9s 383ms/step\n","                                                   precision    recall  f1-score   support\n","\n","                            Advanced Refrigerants       1.00      1.00      1.00         3\n","                      Afforestation/Reforestation       0.95      0.95      0.95        37\n","                        Avoided Forest Conversion       1.00      1.00      1.00         1\n","                     Avoided Grassland Conversion       1.00      1.00      1.00         2\n","                                     Biodigesters       1.00      0.95      0.97        20\n","                                          Biomass       0.86      0.82      0.84        22\n","          Brick Manufacturing Emission Reductions       1.00      1.00      1.00         1\n","                        Bundled Energy Efficiency       0.87      0.93      0.90        14\n","                                      Clean Water       1.00      0.88      0.94        33\n","                              Community Boreholes       0.84      1.00      0.91        21\n","                                       Composting       1.00      0.80      0.89         5\n","                                       Cookstoves       0.99      0.98      0.99       117\n","                     Electric Vehicles & Charging       1.00      1.00      1.00         2\n","                                Energy Efficiency       1.00      0.50      0.67         2\n","                                   Fuel Switching       0.00      0.00      0.00         1\n","                                       Geothermal       1.00      0.67      0.80         3\n","                      HFC Refrigerant Reclamation       1.00      1.00      1.00         4\n","               HFC Replacement in Foam Production       1.00      1.00      1.00         5\n","                                       Hydropower       1.00      0.98      0.99        42\n","                       Improved Forest Management       0.98      0.98      0.98        61\n","                   Improved Irrigation Management       1.00      1.00      1.00         2\n","                                 Landfill Methane       0.97      1.00      0.98        29\n","                                         Lighting       1.00      1.00      1.00         4\n","                          Manure Methane Digester       1.00      1.00      1.00        35\n","                   Methane Recovery in Wastewater       0.80      1.00      0.89         8\n","                             Mine Methane Capture       1.00      1.00      1.00        11\n","        N2O Destruction in Nitric Acid Production       1.00      1.00      1.00         2\n","               Natural Gas Electricity Generation       0.33      0.50      0.40         2\n","Ozone Depleting Substances Recovery & Destruction       1.00      1.00      1.00        24\n","                                       RE Bundled       0.43      1.00      0.60         3\n","                                            REDD+       0.95      0.95      0.95        22\n","                         Rice Emission Reductions       1.00      1.00      1.00        22\n","                              Solar - Centralized       0.90      1.00      0.95        26\n","                              Solar - Distributed       1.00      0.86      0.92         7\n","                                   Solar Lighting       1.00      1.00      1.00         4\n","                              Solar Water Heaters       1.00      1.00      1.00         1\n","                          Sustainable Agriculture       1.00      0.86      0.92        14\n","                 Sustainable Grassland Management       0.80      1.00      0.89         4\n","                       Truck Stop Electrification       1.00      1.00      1.00         2\n","                                  Waste Diversion       0.50      1.00      0.67         1\n","                               Waste Gas Recovery       1.00      1.00      1.00         1\n","                              Waste Heat Recovery       1.00      1.00      1.00         4\n","                               Waste Incineration       0.50      1.00      0.67         1\n","                                  Waste Recycling       1.00      0.50      0.67         2\n","                              Wetland Restoration       1.00      0.75      0.86         4\n","                                             Wind       0.99      0.95      0.97        83\n","\n","                                         accuracy                           0.96       714\n","                                        macro avg       0.91      0.91      0.89       714\n","                                     weighted avg       0.96      0.96      0.96       714\n","\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"17LSnt8hoEpur64iEct8dFKVw3A_DZn6z","timestamp":1691272028261},{"file_id":"1-VTqZbujENwXBgePQyEj5PTzkp7cjDzl","timestamp":1690438896221}],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.11"},"widgets":{"application/vnd.jupyter.widget-state+json":{"9d1cd7011cd24e7a8ad9c62a69ca24a0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_fb221211ec774b8880752c989a7fc06f","IPY_MODEL_7874cf89f53d49389dcbea6b339eb4d5","IPY_MODEL_b4e9f726700144d2b515f13484c6e25e"],"layout":"IPY_MODEL_1676dba5364249eb9c4316db8d93a605"}},"fb221211ec774b8880752c989a7fc06f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4600b15fedb647c58676903d62d2a8cd","placeholder":"​","style":"IPY_MODEL_60411f199f2e4c37b43c3bc9ea0091d9","value":"Downloading: 100%"}},"7874cf89f53d49389dcbea6b339eb4d5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_fdb5643546fa40d19121b3a3b47a34a5","max":213450,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6c14b22033024da5ac15cd6e795941a3","value":213450}},"b4e9f726700144d2b515f13484c6e25e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2c739c90a06744a9884d3a7eb6443ebb","placeholder":"​","style":"IPY_MODEL_91954104edcd4f7cb6de2d9dd1c65f4f","value":" 208k/208k [00:00&lt;00:00, 781kB/s]"}},"1676dba5364249eb9c4316db8d93a605":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4600b15fedb647c58676903d62d2a8cd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"60411f199f2e4c37b43c3bc9ea0091d9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fdb5643546fa40d19121b3a3b47a34a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6c14b22033024da5ac15cd6e795941a3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2c739c90a06744a9884d3a7eb6443ebb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"91954104edcd4f7cb6de2d9dd1c65f4f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"da5959e4f24447738530e3008db19e42":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_63e7b27783e6430f81112798d727cebf","IPY_MODEL_511e682e025b40ed941bf97bacd99c18","IPY_MODEL_b21b55d169924086b9433bee0262e3aa"],"layout":"IPY_MODEL_b06f5849359546b394f882adc380079e"}},"63e7b27783e6430f81112798d727cebf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_50a0e589b6164930b7a60aa829beb640","placeholder":"​","style":"IPY_MODEL_a4a9fc34e2604d71a727929c5e5198ef","value":"Downloading: 100%"}},"511e682e025b40ed941bf97bacd99c18":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_661209ea99684af3a4040c8d1fb53bd6","max":49,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c8f226b10ebc4c7fab253ece843fbd0f","value":49}},"b21b55d169924086b9433bee0262e3aa":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3db1badd608647a7a3f7f76620a30a20","placeholder":"​","style":"IPY_MODEL_250ce0d3bd8249a2a0dc7ce9fe2440d4","value":" 49.0/49.0 [00:00&lt;00:00, 2.59kB/s]"}},"b06f5849359546b394f882adc380079e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"50a0e589b6164930b7a60aa829beb640":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a4a9fc34e2604d71a727929c5e5198ef":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"661209ea99684af3a4040c8d1fb53bd6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c8f226b10ebc4c7fab253ece843fbd0f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3db1badd608647a7a3f7f76620a30a20":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"250ce0d3bd8249a2a0dc7ce9fe2440d4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3bc325475bf745d38dc7b6035efcba83":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_95107aa066b844f0a3dd9e143726a931","IPY_MODEL_456a3cc27bc14362ad4988a8a0964fa4","IPY_MODEL_12f94cd18d6e4c0099d42685a9b575be"],"layout":"IPY_MODEL_a0fc1e44bd9947c1a959f19a17c8e93b"}},"95107aa066b844f0a3dd9e143726a931":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6a021c26da884a91b386b92b7179f516","placeholder":"​","style":"IPY_MODEL_290663c6cd4046e9a1d844117f7620a9","value":"Downloading: 100%"}},"456a3cc27bc14362ad4988a8a0964fa4":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_90aacb62d9cb4f308981f44b1da055aa","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a836256c4a054ca086794e40d82a928f","value":570}},"12f94cd18d6e4c0099d42685a9b575be":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0d02a9e2053a4c9c85bb108a97fcd9ea","placeholder":"​","style":"IPY_MODEL_6de6793c6a7849d482067cf4c844e4b0","value":" 570/570 [00:00&lt;00:00, 28.2kB/s]"}},"a0fc1e44bd9947c1a959f19a17c8e93b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6a021c26da884a91b386b92b7179f516":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"290663c6cd4046e9a1d844117f7620a9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"90aacb62d9cb4f308981f44b1da055aa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a836256c4a054ca086794e40d82a928f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0d02a9e2053a4c9c85bb108a97fcd9ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6de6793c6a7849d482067cf4c844e4b0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1035e533f4994575985871bf44ace6e0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_10f04e238514498284666d834d9e68f5","IPY_MODEL_d37c5d28bfd8469993c0ac3f5a9b86fe","IPY_MODEL_a7da439630b04261946c5a158b1864cc"],"layout":"IPY_MODEL_7c694f88fa034899809f6122015c50fb"}},"10f04e238514498284666d834d9e68f5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_abc0c0af2a834bc7bf46e25c721c2414","placeholder":"​","style":"IPY_MODEL_154150213cc94c68b0e41c1704897de4","value":"Downloading: 100%"}},"d37c5d28bfd8469993c0ac3f5a9b86fe":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_6d27f532793e45ec8bbecd9088b35c92","max":526681800,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1c6453cf0fab400983493297cc45ed1b","value":526681800}},"a7da439630b04261946c5a158b1864cc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f2c8bd1e7af64d1693393413f3758b4d","placeholder":"​","style":"IPY_MODEL_426a0f91f62d4a0c9a25bebaaafb1303","value":" 502M/502M [00:08&lt;00:00, 74.6MB/s]"}},"7c694f88fa034899809f6122015c50fb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"abc0c0af2a834bc7bf46e25c721c2414":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"154150213cc94c68b0e41c1704897de4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6d27f532793e45ec8bbecd9088b35c92":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1c6453cf0fab400983493297cc45ed1b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f2c8bd1e7af64d1693393413f3758b4d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"426a0f91f62d4a0c9a25bebaaafb1303":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}